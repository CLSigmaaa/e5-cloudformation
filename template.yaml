AWSTemplateFormatVersion: '2010-09-09'
Description: Basic CloudFormation template for API Gateway with Lambda function

Resources:
  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: MyLambdaFunction
      Runtime: nodejs18.x
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            return {
              statusCode: 200,
              body: JSON.stringify({ message: "Hello from Lambda!" }),
            };
          };

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: OrientLambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: OrientLambdaExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"

  # ApiGateway:
  #   Type: AWS::ApiGateway::RestApi
  #   Properties:
  #     Name: MyApiGateway

  # ApiGatewayResource:
  #   Type: AWS::ApiGateway::Resource
  #   Properties:
  #     ParentId: !GetAtt ApiGateway.RootResourceId
  #     PathPart: hello
  #     RestApiId: !Ref ApiGateway

  OrientApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: OrientApi

  OrientApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt OrientApiGateway.RootResourceId
      PathPart: intranet
      RestApiId: !Ref OrientApiGateway

  OrientApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref OrientApiGateway
      ResourceId: !Ref OrientApiGatewayResource
      HttpMethod: POST
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref OrientApiCognitoAuthorizer
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OrientGetEmployesLambda.Arn}/invocations"

    OrientGetEmployesLambda:
      Type: AWS::Lambda::Function
      Properties: 
        FunctionName: OrientGetEmployes
        Handler: index.handler
        Runtime: python3.8
        Role: !GetAtt OrientLambdaExecutionRole.Arn
        Code:
          ZipFile: |
            def handler(event, context):
                return {"statusCode": 200, "body": "Liste des employ√©s"}

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint"
    Value: !Sub "https://${OrientApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/hello"